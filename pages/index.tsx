import { useContractKit } from "@celo-tools/use-contractkit";
import { StableToken } from "@celo/contractkit";
import Head from "next/head";
import { useCallback } from "react";

export default function Home() {
  const { kit, connect, performActions } = useContractKit();

  const transfer = useCallback(async () => {
    await performActions(async (_kit) => {
      const cusd = await kit.contracts.getStableToken(StableToken.cUSD);

      const receipt = await cusd
        .transfer("0x73D20479390E1acdB243570b5B739655989412f5", "1")
        .sendAndWaitForReceipt({
          from: _kit.defaultAccount,
          feeCurrency: cusd.address,
        });

      alert(receipt.transactionHash);
    });
  }, [performActions]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="max-w-screen-md mx-auto py-8 space-y-4">
        <h1 className="text-xl">
          Welcome to the Celo x WalletConnect workshop!
        </h1>

        {kit.defaultAccount ? (
          <div className="space-y-4">
            <span>Connected to account: </span>
            <code>{kit.defaultAccount}</code>
            <button
              onClick={transfer}
              className="block bg-blue-500 text-white px-4 py-2 rounded"
            >
              Transfer
            </button>
          </div>
        ) : (
          <>
            <button
              onClick={connect}
              className="bg-blue-500 text-white px-4 py-2 rounded"
            >
              Connect
            </button>
          </>
        )}
      </main>
    </div>
  );
}
