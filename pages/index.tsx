import WalletConnectClient, { CLIENT_EVENTS } from "@walletconnect/client";
import { PairingTypes, SessionTypes } from "@walletconnect/types";
import Head from "next/head";
import { useCallback, useState } from "react";

export default function Home() {
  const [client, setClient] = useState<WalletConnectClient | null>(null);
  const [uri, setUri] = useState("");
  const [account, setAccount] = useState("");
  const [session, setSession] = useState<SessionTypes.Settled | null>(null);

  const initialise = useCallback(async () => {
    const _client = await WalletConnectClient.init({
      relayProvider: "wss://walletconnect.celo.org",
      metadata: {
        name: "Celo x WalletConnect",
        description: "Example Dapp showcasing WalletConnect and Celo",
        url: "https://eth-cc-celo-walletconnect.com",
        icons: ["https://walletconnect.org/walletconnect-logo.png"],
      },
    });
    _client.on(
      CLIENT_EVENTS.pairing.proposal,
      async ({
        signal: {
          params: { uri },
        },
      }: PairingTypes.Proposal) => setUri(uri)
    );

    const _session = await _client.connect({
      permissions: {
        blockchain: {
          chains: ["celo:42220"],
        },
        jsonrpc: {
          methods: ["eth_signTransaction", "personal_sign"],
        },
      },
    });

    setAccount(_session.state.accounts[0]);
    setSession(_session);
    setClient(_client);
  }, []);

  const sign = useCallback(async () => {
    if (!client || !session || !account) {
      return;
    }

    const result = await client.request({
      topic: session.topic,
      chainId: "celo:42220",
      request: {
        method: "personal_sign",
        params: JSON.stringify([
          "0x" + Buffer.from("data").toString("hex"),
          account.split("@")[0],
        ]),
      },
    });
    alert(result);
  }, [client, session, account]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="max-w-screen-md mx-auto py-8 space-y-4">
        <h1 className="text-xl">
          Welcome to the Celo x WalletConnect workshop!
        </h1>

        {account ? (
          <div className="space-y-4">
            <span>Connected to account: </span>
            <code>{account}</code>
            <button
              onClick={sign}
              className="block bg-blue-500 text-white px-4 py-2 rounded"
            >
              Sign
            </button>
          </div>
        ) : (
          <>
            <button
              onClick={initialise}
              className="bg-blue-500 text-white px-4 py-2 rounded"
            >
              Connect
            </button>

            {uri && (
              <div>
                <div>Use this URI to connect</div>
                <code>{uri}</code>
              </div>
            )}
          </>
        )}
      </main>
    </div>
  );
}
