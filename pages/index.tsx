import { ContractKit, newKit, StableToken } from "@celo/contractkit";
import { WalletConnectWallet } from "@celo/wallet-walletconnect";
import Head from "next/head";
import { useCallback, useState } from "react";

export default function Home() {
  const [kit, setKit] = useState<ContractKit | null>(null);
  const [uri, setUri] = useState("");

  const initialise = useCallback(async () => {
    const wallet = new WalletConnectWallet({
      connect: {
        metadata: {
          name: "Celo x WalletConnect",
          description: "Example Dapp showcasing WalletConnect and Celo",
          url: "https://eth-cc-celo-walletconnect.com",
          icons: ["https://walletconnect.org/walletconnect-logo.png"],
        },
      },
      init: {
        relayProvider: "wss://walletconnect.celo.org",
      },
    });

    const _uri = await wallet.getUri();
    setUri(_uri!);
    await wallet.init();

    const [from] = await wallet.getAccounts();
    const _kit = newKit("https://forno.celo.org", wallet);
    _kit.defaultAccount = from;
    setKit(_kit);
  }, []);

  const transfer = useCallback(async () => {
    if (!kit) {
      return;
    }

    const cusd = await kit.contracts.getStableToken(StableToken.cUSD);

    const receipt = await cusd
      .transfer("0x73D20479390E1acdB243570b5B739655989412f5", "1")
      .sendAndWaitForReceipt({
        from: kit.defaultAccount,
      });

    alert(receipt.transactionHash);
  }, [kit]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="max-w-screen-md mx-auto py-8 space-y-4">
        <h1 className="text-xl">
          Welcome to the Celo x WalletConnect workshop!
        </h1>

        {kit ? (
          <div className="space-y-4">
            <span>Connected to account: </span>
            <code>{kit.defaultAccount}</code>
            <button
              onClick={transfer}
              className="block bg-blue-500 text-white px-4 py-2 rounded"
            >
              Transfer
            </button>
          </div>
        ) : (
          <>
            <button
              onClick={initialise}
              className="bg-blue-500 text-white px-4 py-2 rounded"
            >
              Connect
            </button>

            {uri && (
              <div>
                <div>Use this URI to connect</div>
                <code>{uri}</code>
              </div>
            )}
          </>
        )}
      </main>
    </div>
  );
}
